apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\Program Files\Kompose\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.24.0 (7c629530)
      creationTimestamp: null
      labels:
        io.kompose.service: backend
      name: backend
    spec:
      ports:
        - name: "1323"
          port: 1323
          targetPort: 1323
      selector:
        io.kompose.service: backend
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\Program Files\Kompose\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.24.0 (7c629530)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      ports:
        - name: "3306"
          port: 3306
          targetPort: 3306
      selector:
        io.kompose.service: db
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\Program Files\Kompose\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.24.0 (7c629530)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend
      name: frontend
    spec:
      ports:
        - name: "3000"
          port: 3000
          targetPort: 3000
      selector:
        io.kompose.service: frontend
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\Program Files\Kompose\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.service.type: LoadBalancer
        kompose.version: 1.24.0 (7c629530)
      creationTimestamp: null
      labels:
        io.kompose.service: gateway-tcp
      name: gateway-tcp
    spec:
      ports:
        - name: "80"
          port: 80
          targetPort: 80
        - name: "443"
          port: 443
          targetPort: 443
      selector:
        io.kompose.service: gateway
      type: LoadBalancer
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\Program Files\Kompose\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.24.0 (7c629530)
      creationTimestamp: null
      labels:
        io.kompose.service: backend
      name: backend
    spec:
      replicas: 5
      selector:
        matchLabels:
          io.kompose.service: backend
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\Program Files\Kompose\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
            kompose.version: 1.24.0 (7c629530)
          creationTimestamp: null
          labels:
            io.kompose.service: backend
        spec:
          containers:
            - env:
                - name: DB_HOST
                  value: db
              image: go-echo-mysql-docker_backend
              name: backend
              imagePullPolicy: Never
              ports:
                - containerPort: 1323
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\Program Files\Kompose\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.24.0 (7c629530)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: db
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\Program Files\Kompose\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
            kompose.version: 1.24.0 (7c629530)
          creationTimestamp: null
          labels:
            io.kompose.service: db
        spec:
          containers:
            - env:
                - name: MYSQL_ROOT_PASSWORD
                  value: root
              image: go-echo-mysql-docker_db
              name: db
              imagePullPolicy: Never
              ports:
                - containerPort: 3306
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\Program Files\Kompose\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.24.0 (7c629530)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend
      name: frontend
    spec:
      replicas: 2
      selector:
        matchLabels:
          io.kompose.service: frontend
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\Program Files\Kompose\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
            kompose.version: 1.24.0 (7c629530)
          creationTimestamp: null
          labels:
            io.kompose.service: frontend
        spec:
          containers:
            - image: go-echo-mysql-docker_frontend
              name: frontend
              imagePullPolicy: Never
              ports:
                - containerPort: 3000
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\Program Files\Kompose\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.service.type: LoadBalancer
        kompose.version: 1.24.0 (7c629530)
      creationTimestamp: null
      labels:
        io.kompose.service: gateway
      name: gateway
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: gateway
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\Program Files\Kompose\kompose.exe convert -f docker-compose.yml -o kubemanifests.yaml
            kompose.service.type: LoadBalancer
            kompose.version: 1.24.0 (7c629530)
          creationTimestamp: null
          labels:
            io.kompose.service: gateway
        spec:
          containers:
            - image: go-echo-mysql-docker_gateway
              name: gateway
              imagePullPolicy: Never
              ports:
                - containerPort: 80
                - containerPort: 443
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

