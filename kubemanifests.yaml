apiVersion: v1
items:
#### Backend ####
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        io.kompose.service: backend
      name: backend
    spec:
      ports:
        - name: "1323"
          port: 1323
          targetPort: 1323
      selector:
        io.kompose.service: backend
    status:
      loadBalancer: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        io.kompose.service: backend
      name: backend
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: backend
      strategy: {}
      template:
        metadata:
          labels:
            io.kompose.service: backend
        spec:
          containers:
            - env:
                - name: DB_HOST
                  value: db
              image: go-echo-mysql-docker_backend
              name: backend
              imagePullPolicy: Never
              ports:
                - containerPort: 1323
              resources: {}
          restartPolicy: Always
    status: {}

#### Frontend ####
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        io.kompose.service: frontend
      name: frontend
    spec:
      ports:
        - name: "3000"
          port: 3000
          targetPort: 3000
      selector:
        io.kompose.service: frontend
    status:
      loadBalancer: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        io.kompose.service: frontend
      name: frontend
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: frontend
      strategy: {}
      template:
        metadata:
          labels:
            io.kompose.service: frontend
        spec:
          containers:
            - image: go-echo-mysql-docker_frontend
              name: frontend
              imagePullPolicy: Never
              ports:
                - containerPort: 3000
              resources: {}
          restartPolicy: Always
    status: {}

#### DB ####
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        io.kompose.service: db
      name: db
    spec:
      ports:
        - name: "3306"
          port: 3306
          targetPort: 3306
      selector:
        io.kompose.service: db
    status:
      loadBalancer: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        io.kompose.service: db
      name: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: db
      strategy: {}
      template:
        metadata:
          labels:
            io.kompose.service: db
        spec:
          containers:
            - env:
                - name: MYSQL_ROOT_PASSWORD
                  value: root
              image: go-echo-mysql-docker_db
              name: db
              imagePullPolicy: Never
              ports:
                - containerPort: 3306
              resources: {}
          restartPolicy: Always
    status: {}

#### Ingress (Need to install NGINX Load Balancer Ingress Controller) ####
# ref: https://platform9.com/blog/building-a-complete-stack-ingress-controllers/
# kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/cloud/deploy.yaml
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: minimal-ingress
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/rewrite-target: /$2$3
    spec:
      ingressClassName: nginx
      rules:
      - http:
          paths:
          - path: /api/()(.*)
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 1323
          - path: /()(.*)
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 3000          

# #### Reverse Proxy ####
#   - apiVersion: v1
#     kind: Service
#     metadata:
#       labels:
#         io.kompose.service: gateway-tcp
#       name: gateway-tcp
#     spec:
#       ports:
#         - name: "80"
#           port: 80
#           targetPort: 80
#         - name: "443"
#           port: 443
#           targetPort: 443
#       selector:
#         io.kompose.service: gateway
#       type: LoadBalancer
#     status:
#       loadBalancer: {}

#   - apiVersion: apps/v1
#     kind: Deployment
#     metadata:
#       labels:
#         io.kompose.service: gateway
#       name: gateway
#     spec:
#       replicas: 3
#       selector:
#         matchLabels:
#           io.kompose.service: gateway
#       strategy: {}
#       template:
#         metadata:
#           labels:
#             io.kompose.service: gateway
#         spec:
#           containers:
#             - image: go-echo-mysql-docker_gateway
#               name: gateway
#               imagePullPolicy: Never
#               ports:
#                 - containerPort: 80
#                 - containerPort: 443
#               resources: {}
#           restartPolicy: Always
#     status: {}
kind: List
metadata: {}

# ref: https://github.com/kubernetes/ingress-nginx/issues/3122